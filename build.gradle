import com.github.spotbugs.snom.SpotBugsTask
import com.github.spotbugs.snom.Confidence
import com.github.spotbugs.snom.Effort

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5' // Actualizado a Spring Boot 3.1.5
    id 'io.spring.dependency-management' version '1.1.3' // Actualizado a 1.1.3
    id 'checkstyle'
    id("com.github.spotbugs") version "5.0.14"
}

group = 'com.sufi'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA
    implementation 'org.springframework.boot:spring-boot-starter-validation' // Validaci贸n
    implementation 'com.fasterxml.jackson.core:jackson-databind' // Para manejar JSON
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Test
    testImplementation 'org.junit.jupiter:junit-jupiter-engine' // JUnit 5
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.xerial:sqlite-jdbc:3.41.2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    // Actuator para exponer endpoints de monitoreo
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Micrometer Prometheus registry
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Para pruebas
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'io.micrometer:micrometer-core'
    testImplementation 'io.micrometer:micrometer-test'

    // Para mockito
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'

    // Para Lombok en tests
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

}

test {
    jvmArgs "-XX:+EnableDynamicAgentLoading"
}

checkstyle {
    configFile = file("config/checkstyle/checkstyle.xml")
    toolVersion = "10.12.1"
    showViolations = true
}

spotbugs {
    toolVersion = '4.7.3' // Versi贸n compatible con plugin 5.0.14
    ignoreFailures = false

    // Configuraci贸n alternativa que funciona seguro:
    effort = Effort.MAX
    reportLevel = Confidence.LOW
}

tasks.withType(SpotBugsTask) {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/${it.name}.html")
        }
    }

    // Excluir clases an贸nimas y generadas
    excludeFilter = file('config/spotbugs/exclude.xml')
}

java {
    sourceCompatibility = JavaVersion.VERSION_21 // Actualizado a Java 21
    targetCompatibility = JavaVersion.VERSION_21 // Actualizado a Java 21
}

test {
    useJUnitPlatform()
}